{"ast":null,"code":"var _jsxFileName = \"/Users/jared/Development/Mod_4/Projects/chess-frontend/src/Pieces/Queen/Queen.js\";\nimport React from 'react';\nimport Pieces from '../Pieces.js';\nexport default class Queen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.isValidMove = (source, destination) => {\n      const proposedMove = Math.abs(source - destination);\n      let incrementBy = 0;\n\n      switch (proposedMove) {\n        case proposedMove % 9 === 0:\n          return incrementBy = 9;\n          break;\n\n        case proposedMove % 8 === 0:\n          return incrementBy = 8;\n          break;\n\n        case proposedMove % 7 === 0:\n          return incrementBy = 7;\n          break;\n\n        case proposedMove % 1 === 0 && proposedMove < 8:\n          return incrementBy = 1;\n          break;\n\n        default:\n          return alert(\"The Queen's movements have been restricted.\");\n      }\n    };\n\n    this.generatePath = (source, destination, incrementBy) => {\n      const path = [];\n\n      if (source < destination) {\n        for (let beta = source; beta < destination + 1; beta += incrementBy) {\n          path.push(beta);\n        }\n      }\n\n      return path;\n    };\n\n    this.state = {\n      captured: false,\n      image: props.player === 1 ? '' : ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jared/Development/Mod_4/Projects/chess-frontend/src/Pieces/Queen/Queen.js"],"names":["React","Pieces","Queen","Component","constructor","props","isValidMove","source","destination","proposedMove","Math","abs","incrementBy","alert","generatePath","path","beta","push","state","captured","image","player","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,WARmB,GAQL,CAACC,MAAD,EAASC,WAAT,KAAyB;AACrC,YAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASJ,MAAM,GAAGC,WAAlB,CAArB;AACA,UAAII,WAAW,GAAG,CAAlB;;AACA,cAAQH,YAAR;AACE,aAAKA,YAAY,GAAG,CAAf,KAAqB,CAA1B;AACE,iBAAOG,WAAW,GAAG,CAArB;AACA;;AACF,aAAKH,YAAY,GAAG,CAAf,KAAqB,CAA1B;AACE,iBAAOG,WAAW,GAAG,CAArB;AACA;;AACF,aAAKH,YAAY,GAAG,CAAf,KAAqB,CAA1B;AACE,iBAAOG,WAAW,GAAG,CAArB;AACA;;AACF,aAAKH,YAAY,GAAG,CAAf,KAAqB,CAArB,IAA0BA,YAAY,GAAG,CAA9C;AACE,iBAAOG,WAAW,GAAG,CAArB;AACA;;AACF;AACE,iBAAOC,KAAK,CAAC,6CAAD,CAAZ;AAdJ;AAgBD,KA3BkB;;AAAA,SA6BnBC,YA7BmB,GA6BJ,CAACP,MAAD,EAASC,WAAT,EAAsBI,WAAtB,KAAsC;AACnD,YAAMG,IAAI,GAAG,EAAb;;AACA,UAAIR,MAAM,GAAGC,WAAb,EAA2B;AACzB,aAAI,IAAIQ,IAAI,GAAGT,MAAf,EAAuBS,IAAI,GAAGR,WAAW,GAAG,CAA5C,EAA+CQ,IAAI,IAAIJ,WAAvD,EAAoE;AAClEG,UAAAA,IAAI,CAACE,IAAL,CAAUD,IAAV;AACD;AACF;;AACD,aAAOD,IAAP;AACD,KArCkB;;AAEjB,SAAKG,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,KAAiB,CAAjB,GAAqB,EAArB,GAA0B;AAFtB,KAAb;AAID;;AAiCDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAID;;AA7CgD","sourcesContent":["import React from 'react';\nimport Pieces from '../Pieces.js'\n\nexport default class Queen extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      captured: false,\n      image: props.player === 1 ? '' : ''\n    };\n  }\n\n  isValidMove = (source, destination) => {\n    const proposedMove = Math.abs(source - destination);\n    let incrementBy = 0;\n    switch (proposedMove) {\n      case proposedMove % 9 === 0:\n        return incrementBy = 9;\n        break;\n      case proposedMove % 8 === 0:\n        return incrementBy = 8;\n        break;\n      case proposedMove % 7 === 0:\n        return incrementBy = 7;\n        break;\n      case proposedMove % 1 === 0 && proposedMove < 8:\n        return incrementBy = 1;\n        break;\n      default:\n        return alert(\"The Queen's movements have been restricted.\");\n    }\n  }\n\n  generatePath = (source, destination, incrementBy) => {\n    const path = [];\n    if( source < destination ) {\n      for(let beta = source; beta < destination + 1; beta += incrementBy) {\n        path.push(beta);\n      }\n    }\n    return path;\n  }\n\n  render() {\n    return(\n      <div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}