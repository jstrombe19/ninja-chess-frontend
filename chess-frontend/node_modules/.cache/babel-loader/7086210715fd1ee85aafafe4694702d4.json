{"ast":null,"code":"var _jsxFileName = \"/Users/jared/Development/Mod_4/Projects/chess-frontend/src/Board/Board.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Square from './Square/Square.js';\nimport './Board.css';\nexport default class Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSquare = (index, squareShade) => {\n      const squares = this.props.squares;\n      return React.createElement(Square, {\n        style: squares[index] ? squares[index].style : null,\n        shade: squareShade,\n        onClick: this.props.selectSquare(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    };\n\n    this.buildBoard = () => {\n      const board = [];\n\n      for (let rankNumber = 0; rankNumber < 8; rankNumber++) {\n        const ranks = [];\n\n        for (let file = 0; file < 8; file++) {\n          const squareShade = isEven(rankNumber) && isEven(file) || !isEven(rankNumber) && !isEven(file) ? \"light-square\" : \"dark-square\";\n          ranks.push(this.renderSquare(rankNumber * 8 + file, squareShade));\n        }\n\n        board.push(React.createElement(\"div\", {\n          className: \"Board-rank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, ranks));\n      }\n\n      return board;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.buildBoard());\n  }\n\n}\n\nfunction isEven(number) {\n  return number % 2 === 0;\n}","map":{"version":3,"sources":["/Users/jared/Development/Mod_4/Projects/chess-frontend/src/Board/Board.js"],"names":["React","ReactDOM","Square","Board","Component","renderSquare","index","squareShade","squares","props","style","selectSquare","buildBoard","board","rankNumber","ranks","file","isEven","push","render","number"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAO,aAAP;AAEA,eAAe,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAEjDC,YAFiD,GAElC,CAACC,KAAD,EAAQC,WAAR,KAAwB;AAAA,YAC7BC,OAD6B,GACjB,KAAKC,KADY,CAC7BD,OAD6B;AAErC,aACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEA,OAAO,CAACF,KAAD,CAAP,GAAiBE,OAAO,CAACF,KAAD,CAAP,CAAeI,KAAhC,GAAwC,IADjD;AAEE,QAAA,KAAK,EAAEH,WAFT;AAGE,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWE,YAAX,CAAwBL,KAAxB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KAXgD;;AAAA,SAajDM,UAbiD,GAapC,MAAM;AACjB,YAAMC,KAAK,GAAG,EAAd;;AACA,WAAI,IAAIC,UAAU,GAAG,CAArB,EAAwBA,UAAU,GAAG,CAArC,EAAwCA,UAAU,EAAlD,EAAsD;AACpD,cAAMC,KAAK,GAAG,EAAd;;AACA,aAAI,IAAIC,IAAI,GAAG,CAAf,EAAkBA,IAAI,GAAG,CAAzB,EAA4BA,IAAI,EAAhC,EAAoC;AAClC,gBAAMT,WAAW,GAAIU,MAAM,CAACH,UAAD,CAAN,IAAsBG,MAAM,CAACD,IAAD,CAA7B,IAAyC,CAACC,MAAM,CAACH,UAAD,CAAP,IAAuB,CAACG,MAAM,CAACD,IAAD,CAAvE,GAAiF,cAAjF,GAAkG,aAAtH;AACAD,UAAAA,KAAK,CAACG,IAAN,CAAW,KAAKb,YAAL,CAAmBS,UAAU,GAAG,CAAd,GAAmBE,IAArC,EAA2CT,WAA3C,CAAX;AACD;;AACDM,QAAAA,KAAK,CAACK,IAAN,CAAW;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BH,KAA7B,CAAX;AACD;;AACD,aAAOF,KAAP;AACD,KAxBgD;AAAA;;AA0BjDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,UAAL,EADH,CADF;AAKD;;AAhCgD;;AAmCnD,SAASK,MAAT,CAAgBG,MAAhB,EAAwB;AACtB,SAAOA,MAAM,GAAG,CAAT,KAAe,CAAtB;AACD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Square from './Square/Square.js';\nimport './Board.css';\n\nexport default class Board extends React.Component {\n\n  renderSquare = (index, squareShade) => {\n    const { squares } = this.props;\n    return(\n      <Square\n        style={squares[index] ? squares[index].style : null}\n        shade={squareShade}\n        onClick={this.props.selectSquare(index)}\n      />\n    )\n  }\n\n  buildBoard = () => {\n    const board = [];\n    for(let rankNumber = 0; rankNumber < 8; rankNumber++) {\n      const ranks = [];\n      for(let file = 0; file < 8; file++) {\n        const squareShade = (isEven(rankNumber) && isEven(file)) || (!isEven(rankNumber) && !isEven(file)) ? \"light-square\" : \"dark-square\";\n        ranks.push(this.renderSquare((rankNumber * 8) + file, squareShade));\n      }\n      board.push(<div className=\"Board-rank\">{ranks}</div>);\n    }\n    return board;\n  }\n\n  render() {\n    return(\n      <div>\n        {this.buildBoard()}\n      </div>\n    );\n  }\n}\n\nfunction isEven(number) {\n  return number % 2 === 0;\n}\n"]},"metadata":{},"sourceType":"module"}