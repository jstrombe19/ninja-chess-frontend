{"ast":null,"code":"var _jsxFileName = \"/Users/jared/Development/Mod_4/Projects/chess-frontend/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport User from './User/User.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.mapUsers = () => {\n      const users = this.state.users;\n      const userList = users.map(user => {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, user.username));\n      });\n      return userList;\n    };\n\n    this.renderUser = user => {\n      return React.createElement(User, Object.assign({\n        key: user.id + Date.now()\n      }, user, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    };\n\n    this.state = {\n      users: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch('localhost:3000');\n      const users = await response.json();\n      this.setState({\n        users\n      });\n      console.log(this.state);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  render() {\n    const users = this.state.users;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(User, {\n      renderUser: this.renderUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), this.mapUsers());\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jared/Development/Mod_4/Projects/chess-frontend/src/App.js"],"names":["React","User","App","Component","constructor","props","mapUsers","users","state","userList","map","user","username","renderUser","id","Date","now","componentDidMount","response","fetch","json","setState","console","log","error","message","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,QAnBmB,GAmBR,MAAM;AAAA,YACPC,KADO,GACG,KAAKC,KADR,CACPD,KADO;AAEf,YAAME,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAI;AACjC,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAI,CAACC,QAAV,CADF,CAAR;AAGD,OAJgB,CAAjB;AAKA,aAAOH,QAAP;AACD,KA3BkB;;AAAA,SA6BnBI,UA7BmB,GA6BLF,IAAD,IAAU;AACrB,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACG,EAAL,GAAUC,IAAI,CAACC,GAAL;AADjB,SAEML,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAMD,KApCkB;;AAEjB,SAAKH,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAED,QAAMU,iBAAN,GAA0B;AACxB,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAA5B;AACA,YAAMZ,KAAK,GAAG,MAAMW,QAAQ,CAACE,IAAT,EAApB;AACA,WAAKC,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AACD,KALD,CAMA,OAAMgB,KAAN,EAAY;AACVF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;AACD;AACF;;AAqBDC,EAAAA,MAAM,GAAG;AAAA,UACCnB,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKM,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAIG,KAAKP,QAAL,EAJH,CADF;AAQD;;AAjD+B;;AAoDlC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport User from './User/User.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: [],\n    };\n  }\n\n  async componentDidMount() {\n    try{\n      const response = await fetch('localhost:3000')\n      const users = await response.json();\n      this.setState({ users })\n      console.log(this.state);\n    }\n    catch(error){\n      console.error(error.message);\n    }\n  }\n\n  mapUsers = () => {\n    const { users } = this.state;\n    const userList = users.map(user => {\n      return (<ul>\n                <li>{user.username}</li>\n              </ul>)\n    });\n    return userList;\n  }\n\n  renderUser = (user) => {\n    return(\n      <User\n        key={user.id + Date.now()}\n        {...user}\n      />\n    )\n  }\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div className=\"App\">\n      <User\n        renderUser={this.renderUser}\n      />\n        {this.mapUsers()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}