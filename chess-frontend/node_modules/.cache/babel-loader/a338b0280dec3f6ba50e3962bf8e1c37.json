{"ast":null,"code":"var _jsxFileName = \"/Users/jared/Development/Mod_4/Projects/chess-frontend/src/Game/Game.js\";\nimport React from 'react';\nimport Board from '../Board/Board.js';\nimport Piece from '../Pieces/Pieces.js';\nimport Bishop from '../Pieces/Bishop/Bishop.js';\nimport King from '../Pieces/King/King.js';\nimport Knight from '../Pieces/Knight/Knight.js';\nimport Pawn from '../Pieces/Pawn/Pawn.js';\nimport Queen from '../Pieces/Queen/Queen.js';\nimport Rook from '../Pieces/Rook/Rook.js';\nimport initializeBoard from '../Helpers/InitializeBoard.js';\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectSquare = index => {\n      const squares = this.state.squares;\n      return squares[index];\n    };\n\n    this.updateSquareState = newSquares => {\n      const squares = this.state.squares;\n      const updatedSquares = newSquares;\n      this.setState({\n        squares: updatedSquares\n      });\n    };\n\n    this.unobstructedPath = path => {\n      const squares = this.state.squares;\n      let response = true;\n      path.map(pathStep => {\n        return squares[pathStep] !== null ? response = false : null;\n      });\n      return response;\n    };\n\n    this.check = () => {\n      return false;\n    };\n\n    this.state = {\n      squares: Array(64).fill(null),\n      users: this.props.users,\n      whiteCaptured: [],\n      blackCaptured: [],\n      whiteScore: 0,\n      blackScore: 0,\n      player: 1,\n      turn: 'white',\n      selectedPiece: -1,\n      status: '',\n      kingsPosition: {\n        white: null,\n        black: null\n      }\n    };\n  }\n\n  render() {\n    const squares = this.state.squares;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: squares,\n      selectSquare: this.selectSquare,\n      updateSquareState: this.updateSquareState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jared/Development/Mod_4/Projects/chess-frontend/src/Game/Game.js"],"names":["React","Board","Piece","Bishop","King","Knight","Pawn","Queen","Rook","initializeBoard","Game","Component","constructor","props","selectSquare","index","squares","state","updateSquareState","newSquares","updatedSquares","setState","unobstructedPath","path","response","map","pathStep","check","Array","fill","users","whiteCaptured","blackCaptured","whiteScore","blackScore","player","turn","selectedPiece","status","kingsPosition","white","black","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AAEA,eAAe,MAAMC,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,YApBmB,GAoBHC,KAAD,IAAW;AAAA,YAChBC,OADgB,GACJ,KAAKC,KADD,CAChBD,OADgB;AAExB,aAAOA,OAAO,CAACD,KAAD,CAAd;AACD,KAvBkB;;AAAA,SAyBnBG,iBAzBmB,GAyBEC,UAAD,IAAgB;AAAA,YAC1BH,OAD0B,GACd,KAAKC,KADS,CAC1BD,OAD0B;AAElC,YAAMI,cAAc,GAAGD,UAAvB;AACA,WAAKE,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEI;AAAX,OAAd;AACD,KA7BkB;;AAAA,SA+BnBE,gBA/BmB,GA+BCC,IAAD,IAAU;AAAA,YACnBP,OADmB,GACP,KAAKC,KADE,CACnBD,OADmB;AAE3B,UAAIQ,QAAQ,GAAG,IAAf;AACAD,MAAAA,IAAI,CAACE,GAAL,CAASC,QAAQ,IAAI;AACnB,eAAQV,OAAO,CAACU,QAAD,CAAP,KAAsB,IAAvB,GAA+BF,QAAQ,GAAG,KAA1C,GAAkD,IAAzD;AACD,OAFD;AAGA,aAAOA,QAAP;AACD,KAtCkB;;AAAA,SAwCnBG,KAxCmB,GAwCX,MAAM;AACZ,aAAO,KAAP;AACD,KA1CkB;;AAEjB,SAAKV,KAAL,GAAa;AACXD,MAAAA,OAAO,EAAEY,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,IAAf,CADE;AAEXC,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWiB,KAFP;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,UAAU,EAAE,CALD;AAMXC,MAAAA,UAAU,EAAE,CAND;AAOXC,MAAAA,MAAM,EAAE,CAPG;AAQXC,MAAAA,IAAI,EAAE,OARK;AASXC,MAAAA,aAAa,EAAE,CAAC,CATL;AAUXC,MAAAA,MAAM,EAAE,EAVG;AAWXC,MAAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE,IADM;AAEbC,QAAAA,KAAK,EAAE;AAFM;AAXJ,KAAb;AAgBD;;AA0BDC,EAAAA,MAAM,GAAG;AAAA,UACC1B,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEA,OAAhB;AAAyB,MAAA,YAAY,EAAE,KAAKF,YAA5C;AAA0D,MAAA,iBAAiB,EAAE,KAAKI,iBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAMD;;AArD+C","sourcesContent":["import React from 'react';\nimport Board from '../Board/Board.js';\nimport Piece from '../Pieces/Pieces.js';\nimport Bishop from '../Pieces/Bishop/Bishop.js';\nimport King from '../Pieces/King/King.js';\nimport Knight from '../Pieces/Knight/Knight.js';\nimport Pawn from '../Pieces/Pawn/Pawn.js';\nimport Queen from '../Pieces/Queen/Queen.js';\nimport Rook from '../Pieces/Rook/Rook.js';\nimport initializeBoard from '../Helpers/InitializeBoard.js';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      squares: Array(64).fill(null),\n      users: this.props.users,\n      whiteCaptured: [],\n      blackCaptured: [],\n      whiteScore: 0,\n      blackScore: 0,\n      player: 1,\n      turn: 'white',\n      selectedPiece: -1,\n      status: '',\n      kingsPosition: {\n        white: null,\n        black: null\n      },\n    }\n  }\n\n  selectSquare = (index) => {\n    const { squares } = this.state;\n    return(squares[index])\n  }\n\n  updateSquareState = (newSquares) => {\n    const { squares } = this.state;\n    const updatedSquares = newSquares;\n    this.setState({ squares: updatedSquares })\n  }\n\n  unobstructedPath = (path) => {\n    const { squares } = this.state;\n    let response = true;\n    path.map(pathStep => {\n      return (squares[pathStep] !== null) ? response = false : null;\n    })\n    return response;\n  }\n\n  check = () => {\n    return false;\n  }\n\n  render() {\n    const { squares } = this.state;\n    return(\n      <div>\n        <Board squares={squares} selectSquare={this.selectSquare} updateSquareState={this.updateSquareState}/>\n      </div>\n\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}